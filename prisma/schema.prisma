generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id           Int           @id @default(autoincrement())
  name         String
  phone        String
  address      String?
  callBack     Boolean
  payment      String
  isNew        Boolean       @default(true)
  items        Json
  totalPrice   Float
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  storeId      Int?
  orderNumber  Int           @unique
  comment      String?
  paid         Boolean       @default(false)
  deliveryType DeliveryType?
  status       OrderStatus   @default(NEW)
  store        Store?        @relation(fields: [storeId], references: [id])
}

model CustomCakeOrder {
  id          Int                    @id @default(autoincrement())
  name        String
  phone       String
  eventType   String?
  weight      Float?
  comment     String?
  customImage String?
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
  orderNumber Int                    @unique @default(dbgenerated("floor(((random() * (900000)::double precision) + (100000)::double precision))"))
  status      OrderStatus            @default(NEW)
  ingredients CustomCakeIngredient[]
}

model Store {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  address   String
  phone     String?
  createdAt DateTime @default(now())
  orders    Order[]
}

model Cake {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  createdAt   DateTime @default(now())
  imageUrl    String
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  username  String?
}

model Ingredient {
  id          Int                    @id @default(autoincrement())
  name        String
  type        IngredientType
  price       Float
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
  customCakes CustomCakeIngredient[]
}

model CustomCakeIngredient {
  id                Int             @id @default(autoincrement())
  customCakeOrderId Int
  ingredientId      Int
  customCakeOrder   CustomCakeOrder @relation(fields: [customCakeOrderId], references: [id])
  ingredient        Ingredient      @relation(fields: [ingredientId], references: [id])
}

enum IngredientType {
  BISCUIT
  CREAM
  DECORATION
  FILLING
}

enum OrderStatus {
  NEW
  PROCESSING
  DELIVERING
  COMPLETED
}

enum DeliveryType {
  PICKUP
  DELIVERY
}
